<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"    
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
         xmlns:aop="http://www.springframework.org/schema/aop"    
         xmlns:context="http://www.springframework.org/schema/context"    
         xsi:schemaLocation="http://www.springframework.org/schema/beans   
                             http://www.springframework.org/schema/beans/spring-beans.xsd    
                              http://www.springframework.org/schema/aop   
                             http://www.springframework.org/schema/aop/spring-aop.xsd    
                             http://www.springframework.org/schema/context   
                             http://www.springframework.org/schema/context/spring-context.xsd"> 
                      
   <!-- ====================开启注解的扫描：对指定的包进行注解的扫描，以进行自动的bean装配=============================================== -->  
  <context:component-scan base-package="service"></context:component-scan>   
  <!-- <context:component-scan base-package="javaConfig"></context:component-scan>  --> 
  
  <!-- 数据源的beans的装配 -->
  <import resource="classpath:config/dataSource.xml"/>
  <import resource="classpath:beans/*.xml"/>   
  <!-- ====================开启对mapper注解的扫描：对指定的包进行mybatisd的mapper注解扫描，以进行自动的sql的执行================================================= -->  
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="mapper" />
  </bean> 
  
  <!-- 全局异常处理器   
    只要你实现了HandlerExceptionResolver接口，这个  
    类就是一个全局异常处理器-->  
    <bean id="exceptionHandler" class="exception.CustomExceptionResolver"></bean> 
    
        <!-- 启用Spring对基于@AspectJ aspects的配置支持 -->    
   <!-- 激活自动代理功能 -->  
    <aop:aspectj-autoproxy proxy-target-class="true"/>  
    <context:component-scan base-package="aspect"></context:component-scan>        
</beans>